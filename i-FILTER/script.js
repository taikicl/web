window.onload = function() {
    // カテゴリー一覧
    const categories = {
        "-11": "タイムアウト（下位）",
        "-10": "内部エラー",
        "-9": "上位プロキシサーバー不正",
        "-8": "上位プロキシサーバー接続タイムアウト",
        "-7": "DNSエラー",
        "-6": "サーバー接続エラー",
        "-5": "タイムアウト（上位）",
        "-4": "認証エラー",
        "-3": "SSLセッション自動断",
        "-1": "許可アクセス／カテゴリ外※",
        "1": "ホワイトリストモード",
        "2": "インターネットOFFモード",
        "3": "Webサービス",
        "4": "ルール参照エラー",
        "5": "ブロック解除中アクセス",
        "6": "パスワードエラー",
        "7": "ブロック解除制限",
        "8": "HTTPSデコード警告",
        "9": "HTTPSデコード告解除",
        "10": "HTTPS証明書告",
        "11": "HTTPS証明答告解除",
        "12": "HTTPSクライアント証明通知",
        "13": "HTTPSクライアント証明吉通知除",
        "14": "CAPTCHA認証ブロック",
        "15": "CAPTCHA認証解除エラー",
        "16": "CAPTCHA認証解除制限",
        "18": "IPアドレスによるURLホスト表記",
        "19": "URLリスト",
        "20": "リクエスト転送サイズ",
        "21": "検索単語",
        "22": "POST単語",
        "23": "レスポンス転送サイズ",
        "24": "PICSスキャン",
        "25": "ページスキャン",
        "26": "コンテンツフィルター",
        "27": "禁止アクセス",
        "33": "ポルノ・アダルトサイト",
        "34": "ヌード・アダルトグッズ",
        "35": "グラビア・写真集",
        "36": "性教育・性の話題",
        "37": "暴力・猟奇描写",
        "38": "犯罪・武器凶器",
        "39": "麻菜・菜品薬物",
        "40": "カルト・テロリズム",
        "41": "ハッキング・クラッキング",
        "42": "不正プログラム配布・リンク集",
        "43": "違法ソフト・反社会行為",
        "44": "フィッシング詐欺",
        "45": "クラッシャーサイト",
        "46": "ギャンブル",
        "47": "懸賞・くじ",
        "48": "アルコール・タバコ",
        "49": "宗教",
        "50": "求人情報",
        "51": "コンピューターサプライ",
        "52": "オフィスサプライ",
        "53": "消費者金融・個人ローン",
        "54": "不動産",
        "55": "結婚相談・斡旋",
        "56": "出会い",
        "57": "Webメール",
        "58": "自殺",
        "59": "家出",
        "60": "チャット",
        "61": "メールマガジン",
        "62": "会員向け掲示板",
        "63": "ソーシャルブックマーク",
        "64": "IT情報掲示板",
        "65": "芸能",
        "66": "映画・演劇",
        "67": "音楽",
        "68": "TV・ラジオ",
        "69": "漫画・アニメ",
        "70": "ゲーム",
        "71": "スポーツ",
        "72": "占い・超常現象",
        "73": "電子善籍・小説投稿サイト",
        "74": "旅行・観光",
        "75": "ホテル・宿泊施設",
        "76": "アミューズメント施設",
        "77": "旅客鉄道",
        "78": "グルメ・飲食店",
        "79": "レシピ",
        "80": "ライブカメラ",
        "81": "オンライントレード",
        "82": "インターネットバンキング",
        "83": "金融・投資情報",
        "84": "保険商品",
        "85": "オンラインストレージ",
        "86": "法人向けオンラインストレージ",
        "87": "動画配信",
        "88": "音楽配信",
        "89": "オークション",
        "90": "オンラインショッピング",
        "91": "ポイントサービス",
        "92": "クーポン総合サイト",
        "93": "クレジットカード・オンライン決済・電子マネー",
        "94": "健康・美容・ファッション",
        "95": "冠婚葬祭",
        "96": "ペット・動物",
        "97": "乗り物",
        "98": "誹謗・中傷",
        "99": "主張",
        "100": "いたずら",
        "101": "ニュース",
        "102": "画像・動画検索エンジン",
        "103": "辞善・百科事典",
        "104": "地図・位置情報",
        "105": "天気・災害情報",
        "106": "掲示板",
        "107": "SNS",
        "108": "ブログ",
        "109": "運動場・競技場",
        "110": "病院・医療・介護",
        "111": "美術館・博物館・図館",
        "112": "タウン情報",
        "113": "メッセンジャー",
        "114": "インターネット電話",
        "115": "P2Pファイル共有",
        "116": "スケジューラー",
        "117": "リモートアクセス",
        "118": "オンライン会議",
        "119": "グループウェア",
        "120": "RSSリーダー",
        "121": "Webアプリケーション",
        "122": "ビジネス向けWebアプリケーション",
        "123": "総合ソフトウェアダウンロード",
        "124": "趣味・同好",
        "125": "ポータル",
        "126": "検索エンジン",
        "127": "アップローダー",
        "128": "迷惑メールリンク",
        "129": "製品サポート・修正プログラム",
        "130": "Web翻訳・URL変換",
        "131": "テキスト翻訳",
        "132": "プロキシ情報",
        "133": "プロバイダー",
        "134": "ホスティング",
        "135": "ダイナミックDNS",
        "136": "広告・バナー",
        "137": "政府・自治体",
        "138": "軍事・防衛関連",
        "139": "政治・政治家",
        "140": "学校・教育施設",
        "141": "上場企業",
        "143": "Dコンテンツ",
        "146": "改ざんサイト",
        "147": "不確定サイト",
        "148": "パークドメイン",
        "150": "企業・ビジネス・業界団体",
        "151": "IT情報・サービス",
        "152": "脅威情報サイト",
        "153": "コンテンツサーバー",
        "154": "緊急",
        "155": "特殊",
        "170": "プライベートネットワーク",
        "195": "表示（Test Board/Info Board）",
        "196": "確認（Test Board/Info Board）",
        "200": "共通リスト：優先ブラックリスト",
        "201": "共通リスト：ブラック除外リスト",
        "202": "共通リスト：ブラックリスト（カテゴリ1）",
        "203": "共通リスト：ブラックリスト（カテゴリ2）",
        "204": "共通リスト：ブラックリスト（カテゴリ3）",
        "205": "個別リスト：優先ブラックリスト",
        "206": "個別リスト：ブラック除外リスト",
        "207": "個別リスト：ブラックリスト（カテゴリ1）",
        "208": "個別リスト：ブラックリスト（カテゴリ2）",
        "209": "個別リスト：ブラックリスト（カテゴリ3）",
        "210": "共通リスト：検索単語",
        "211": "共通リスト：POST単語",
        "212": "共通リスト：コンテンツ単語",
        "213": "個別リスト：検索単語",
        "214": "個別リスト：POST単語",
        "215": "個別リスト：コンテンツ単語",
        "216": "共通リスト：YouTube動画ID禁止リスト",
        "217": "個別リスト：YouTube動画ID禁止リスト",
        "218": "共通リスト：YouTubeチャンネルID禁止リスト",
        "219": "個別リスト：YouTubeチャンネルID禁止リスト",
        "230": "一時インターネットOFF（禁止対象）",
        "231": "一時インターネットOFF（禁止中アクセス）",
        "240": "アカウント利用制限",
        "250": "利用時間制限",
        "260": "カテゴリ外フィルター",
        "270": "隔離対象",
        "271": "隔離中アクセス",
        "280": "推奨フィルター",
        "290": "認証ロック",
        "300": "ICAPサーバー接続エラー（REQMOD）",
        "301": "ICAPサーバー受エラー（REQMOD）",
        "302": "ICAPサーバー通エラー（REQMOD）",
        "303": "ICAPスキャンエラー（アップロード）",
        "304": "破損ファイル（アップロード）",
        "305": "ICAP スキャン不能（アップロード）",
        "306": "未知のウイルスの疑い（アップロード）",
        "307": "疑わしいファイル（アップロード）",
        "308": "ウイルス駆除（アップロード）",
        "309": "ウイルス感染検出（アップロード）",
        "310": "ICAP スキャン（リクエスト）",
        "320": "ICAP サーバー接続エラー（RESPMOD）",
        "321": "ICAP サーバー受エラー（RESPMOD）",
        "322": "ICAP サーバー通エラー（RESPMOD）",
        "323": "ICAP スキャンエラー（ダウンロード）",
        "324": "破損ファイル（ダウンロード）",
        "325": "ICAP スキャン不能（ダウンロード）",
        "326": "未知のウイルスの疑い（ダウンロード）",
        "327": "疑わしいファイル（ダウンロード）",
        "328": "ウイルス駆除（ダウンロード）",
        "329": "ウイルス感染検出（ダウンロード）",
        "330": "ICAP スキャン（レスポンス）",
        "346": "隔離対象（未知のウイルスの疑い（アップロード））",
        "347": "隔離対象（疑わしいファイル（アップロード））",
        "348": "隔離対象（ウイルス駆除（アップロード））",
        "349": "隔離対象（ウイルス感染検出（アップロード））",
        "366": "隔離対象（未知のウイルスの疑い（ダウンロード））",
        "367": "隔離対象（疑わしいファイル（ダウンロード））",
        "368": "隔離対象（ウイルス駆除（アップロード））",
        "369": "隔離対象（ウイルス感染検出（ダウンロード））",
        "400": "m-FILTER連携",
        "410": "ダウンロードフィルター",
        "411": "ダウンロードフィルター解除",
        "415": "ファイルフィルター（アップロード）",
        "416": "ファイルフィルター（ダウンロード）",
        "420": "クレデンシャルプロテクション（REQ）",
        "421": "クレデンシャルプロテクション解除（REQ）",
        "422": "クレデンシャルプロテクション（RES）",
        "423": "クレデンシャルプロテクション解除（RES）",
        "425": "AIチャットフィルター",
        "430": "見守りフィルター（自殺）",
        "431": "見守りフィルター（家出）",
        "432": "見守りフィルター（ユーザー設定）",
        "433": "見守りフィルター（いじめ）",
        "435": "DLP（f-FILTER連携/アップロード）",
        "436": "スキャンエラー（f-FILTER連携/アップロード）",
        "437": "スキャン不能（f-FILTER連携/アップロード）",
        "438": "未承認ファイル（f-FILTER連携/アップロード）",
        "439": "承認済みファイル（f-FILTER連携/アップロード）",
        "440": "スキャンエラー（Anti-Virus/ダウンロード）",
        "441": "スキャン不能（Anti-Virus/ダウンロード）",
        "442": "未知のウイルスの疑い（Anti-Virus/ダウンロード）",
        "443": "ウイルス感染検出（Anti-Virus/ダウンロード）",
        "444": "接続エラー（Sandbox/ダウンロード）",
        "445": "受信エラー（Sandbox/ダウンロード）",
        "446": "通エラー（Sandboxダウンロード）",
        "447": "スキャンエラー（Sandbox/ダウンロード）",
        "448": "スキャン不能（Sandboxダウンロード）",
        "449": "ウイルス感染検出（Sandbox/ダウンロード）",
        "450": "精難対象（未知のウイルスの疑い（Anti-Virus/ダウンロード））",
        "451": "隔離対象（ウイルス感染検出（Anti-Virus/ダウンロード））",
        "452": "隔離対象（ウイルス感染検出（Sandbox/ダウンロード））",
        "453": "パスワード付きファイル（ダウンロード）",
        "454": "解析中クライアント切断検知（Sandbox/ダウンロード）",
        "455": "スキャンエラー（Anti-Vinus/アップロード）",
        "456": "スキャン不能（Anti-Virus/アップロード）",
        "457": "未知のウイルスの疑い（Anti-Virus/アップロード）",
        "458": "ウイルス感染検出（Anti-Virus/アップロード）",
        "459": "接続エラー（Sandbox アップロード）",
        "460": "受信エラー（Sandbox アップロード）",
        "461": "通信エラー（Sandboxアップロード）",
        "462": "スキャンエラー（Sandbox/アップロード）",
        "463": "スキャン不能（Sandboxアップロード）",
        "464": "ウイルス感染検出（Sandbox/アップロード）",
        "465": "隔離対象（未知のウイルスの疑い（Anti-Virus/アップロード））",
        "466": "隔離対象（ウイルス感染検出（Anti-Virus/アップロード））",
        "467": "隔離対象（ウイルス感染検出（Sandbox/アップロード））",
        "469": "解析中クライアント切断検知（Sandbox/アップロード）",
        "501": "カスタム URL カテゴリ"
    };
    const CGkeys = Object.keys(categories);
    const urlText = document.getElementById('url');
    const blText = document.getElementById('blreason');
    const ipText = document.getElementById('ip');
    const userText = document.getElementById('username');
    const cg = document.getElementById('cgCont');
    const reasonLabel = document.getElementById('reasonLabel');
    reasonLabel.addEventListener('click', () => {
        cg.hidden = cg.hidden ? false : true;
    });
    const dateTime = document.getElementById('time');
    // 現在のURLとクエリを取得
    if (window.location.href === "https://taikicl.github.io/web/i-FILTER/") {
        window.location.href = "https://taikicl.github.io/web/i-FILTER/?url=[クエリに偽ブロックするURLを入力してください]&reason=[クエリにブロック理由のカテゴリーインデックスを入力してください]&username=[クエリに学校用のメールアドレスを入力してください]";
    }
    const params = new URLSearchParams(window.location.search);
    const p__url = params.get("url");
    const p__reason = params.get("reason");
    const p__username = params.get("username");
    // 要素をクエリで指定されたやつに書き換える
    urlText.innerText = `${p__url}`;
    blText.innerText = categories[`${p__reason}`];
    userText.innerText = `${p__username}`;
    // IPv4を取得
    fetch('https://api.ipify.org?format=json')
    .then(response => response.json())
    .then(data => {
        // 取得したIPアドレスを表示
        ipText.innerText = data.ip;
    })
    .catch(error => {
        console.error('Error fetching IP:', error);
    });
    // 応答時間を取得
    function formatDate(date) {
        // 年、月、日、時、分、秒を取得してフォーマット
        const year = date.getFullYear();
        const month = String(date.getMonth() + 1).padStart(2, '0'); // 0-indexedなので+1
        const day = String(date.getDate()).padStart(2, '0');
        const hours = String(date.getHours()).padStart(2, '0');
        const minutes = String(date.getMinutes()).padStart(2, '0');
        const seconds = String(date.getSeconds()).padStart(2, '0');
        return `${year}/${month}/${day} ${hours}:${minutes}:${seconds}`;
    }
    // 現在の日時を取得
    const now = new Date();
    // フォーマットされた日時を表示
    dateTime.innerText = formatDate(now);
    // CGを一覧表示
    const cgList = (min, max, end) => {
        for (let i = min; i < max; i++) {
        cg.insertAdjacentHTML(end, `<table border="0" cellspacing="0" cellpadding="2">
            <tbody>
                <tr>
                    <td>
                        <table border="0" cellpadding="0" cellspacing="0">
                            <tbody>
                                <tr>
                                    <td width="120" align="center" nowrap bgcolor="#F5F9Fd" class="infobox">
                                        <table border="0" cellspacing="0" cellpadding="4">
                                            <tbody>
                                                <tr>
                                                    <td nowrap>
                                                        <font color="#053394" size="2">${CGkeys[i]}</font>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                    <td class="infoul">
                                        <table border="0" cellpadding="4" cellspacing="0">
                                            <tbody>
                                                <tr>
                                                    <td nowrap>
                                                        <font size="2">${categories[CGkeys[i]]}</font>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                </tr>
            </tbody>
        </table>`);
        }
    };
    cgList(256, CGkeys.length, "beforeend");
    cgList(0, CGkeys.length - 10, "beforeend");
};
